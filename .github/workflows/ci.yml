---
name: Test bootstrapping a plugin
on:
  pull_request:
    branches:
      - '*'

concurrency:
  group: ${{ github.ref_name }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: "pulp_catdog"

jobs:
  ready-to-ship:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
        with:
          path: "plugin_template"
          fetch-depth: 0
      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.8"
      - name: "Bootstrap catdog plugin"
        working-directory: "plugin_template"
        run: |
          .ci/bootstrap_catdog.sh

      # Below this line we include the steps of the ci workflow of the generated plugin
      - name: "Install python dependencies"
        run: |
          echo ::group::PYDEPS
          pip install requests pygithub
          echo ::endgroup::
      - name: "Check commit message"
        # This will fail for our fake plugin
        if: false
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"
        run: |
          .github/workflows/scripts/check_commit.sh
      - name: "Verify requirements files"
        run: |
          python .ci/scripts/check_requirements.py

  lint:
    uses: "./.github/workflows/lint.yml"

  build:
    needs: "lint"
    uses: "./.github/workflows/build.yml"

  test:
    needs: "build"
    uses: "./.github/workflows/test.yml"

  deprecations:
    runs-on: "ubuntu-latest"
    if: github.base_ref == 'main'
    needs: "test"
    steps:
      - name: "Create working directory"
        run: |
          mkdir -p "pulp_catdog"
        working-directory: "."
      - name: "Download Deprecations"
        uses: actions/download-artifact@v3
        with:
          name: "deprecations"
          path: "pulp_catdog"
      - name: "Print deprecations"
        run: |
          cat deprecations-*.txt | sort -u
          ! cat deprecations-*.txt | grep '[^[:space:]]'
