---
name: Check Commit
on: pull_request
jobs:
  single_commit:
    name: Assert single commit
    if: github.base_ref == 'main'
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 30
    - name: Checkout main
      run: git fetch origin main
    - name: create local main branch
      run: git branch main origin/main
    - name: Commit Count Check
      run: test `git log  --oneline --no-merges HEAD ^main  | wc -l ` = 1
    runs-on: ubuntu-latest
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install python dependencies
        run: |
          pip install requests j2cli PyGithub
      - name: Generate the validation script
        shell: bash
        run: |
          cd templates
          issue_tracker=github plugin_name=plugin_template j2 --undefined github/.ci/scripts/validate_commit_message.py.j2 > ../validate_commit_message.py
          cd ..
      - name: Check commit message
        env:
          GITHUB_CONTEXT: ${{ github.event.pull_request.commits_url }}
        run: |
          for sha in $(curl $GITHUB_CONTEXT | jq '.[].sha' | sed 's/"//g')
          do
            python validate_commit_message.py $sha
            VALUE=$?
            if [ "$VALUE" -gt 0 ]; then
              exit $VALUE
            fi
          done
        shell: bash
