{% include 'header.j2' %}
{% from 'macros.j2' import
  checkout,
  setup_python,
  install_python_deps,
  run_script,
with context %}
---
name: "Build"
on:
  workflow_call:

defaults:
  run:
    working-directory: "{{ plugin_name }}"

jobs:
  build:
    runs-on: "ubuntu-latest"

    steps:
      {{ checkout(path=plugin_name) | indent(6) }}
      {{ checkout(repository="pulp/pulp-openapi-generator", path="pulp-openapi-generator") | indent(6) }}
      {{ setup_python() | indent(6) }}
      {{ install_python_deps(["packaging", "twine", "wheel", "mkdocs", "jq"]) | indent(6) }}
      {%- if os_required_packages %}
      - name: "Install OS packages"
        run: |
          sudo apt-get install -y {{ os_required_packages|join(' ') }}
      {%- endif %}
      - name: "Build package"
        run: |
          python3 setup.py sdist bdist_wheel --python-tag py3
          twine check dist/*
      - name: "Install built packages"
        run: |
          pip install dist/{{ plugin_name | snake }}-*-py3-none-any.whl -c .ci/assets/ci_constraints.txt
      - name: "Generate api specs"
        run: |
          pulpcore-manager openapi --file "api.json"
          {%- for plugin in plugins %}
          pulpcore-manager openapi --bindings --component "{{ plugin.app_label }}" --file "{{ plugin.app_label }}-api.json"
          {%- endfor %}
      - name: "Upload Package whl"
        uses: "actions/upload-artifact@v4"
        with:
          name: "plugin_package"
          path: "{{ plugin_name }}/dist/"
          if-no-files-found: "error"
          retention-days: 5
          overwrite: true
      - name: "Upload API specs"
        uses: "actions/upload-artifact@v4"
        with:
          name: "api_spec"
          path: |
            {{ plugin_name }}/api.json
            {%- for plugin in plugins %}
            {{ plugin_name }}/{{ plugin.app_label }}-api.json
            {%- endfor %}
          if-no-files-found: "error"
          retention-days: 5
          overwrite: true
      {%- if plugins %}
      {{ run_script(name="Build Python bindings packages", file="build_python_client.sh") | indent(6) }}
      - name: "Upload python client packages"
        uses: "actions/upload-artifact@v4"
        with:
          name: "python-client.tar"
          path: |
            {%- for plugin in plugins %}
            {{ plugin_name }}/{{ plugin.app_label }}-python-client.tar
            {%- endfor %}
          if-no-files-found: "error"
          retention-days: 5
          overwrite: true
      - name: "Upload python client docs"
        uses: "actions/upload-artifact@v4"
        with:
          name: "python-client-docs.tar"
          path: |
            {%- for plugin in plugins %}
            {{ plugin_name }}/{{ plugin.app_label }}-python-client-docs.tar
            {%- endfor %}
          if-no-files-found: "error"
          retention-days: 5
          overwrite: true
      {%- if deploy_client_to_rubygems %}
      {{ run_script(name="Build Ruby bindings packages", file="build_ruby_client.sh") | indent(6) }}
      - name: "Upload Ruby client"
        uses: "actions/upload-artifact@v4"
        with:
          name: "ruby-client.tar"
          path: |
            {%- for plugin in plugins %}
            {{ plugin_name }}/{{ plugin.app_label }}-ruby-client.tar
            {%- endfor %}
          if-no-files-found: "error"
          retention-days: 5
          overwrite: true
      {%- endif %}
      {%- endif %}
...
