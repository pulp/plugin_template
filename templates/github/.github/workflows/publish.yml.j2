{% include 'header.j2' %}
{% from 'macros.j2' import
  set_env_vars,
  checkout,
  setup_python,
  setup_ruby,
  display_logs,
  run_script,
  set_secrets,
  install_python_deps,
  configure_git,
with context %}
---
name: "{{ plugin_app_label | camel }} Publish Release"
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

defaults:
  run:
    working-directory: "{{ plugin_name }}"

jobs:
  build:
    uses: "./.github/workflows/build.yml"

  {%- if deploy_to_pypi %}
  publish-package:
    runs-on: "ubuntu-latest"
    needs:
      - "build"

    env:
      GITHUB_TOKEN: "{{ '${{ secrets.GITHUB_TOKEN }}' }}"

    steps:
      {{ checkout(depth=1, path=plugin_name) | indent(6) }}

      - uses: "actions/download-artifact@v4"
        with:
          name: "plugin_package"
          path: "{{ plugin_name }}/dist/"

      {{ setup_python() | indent(6) }}

      {{ install_python_deps(["twine"]) | indent(6) }}

      {{ set_secrets() | indent(6) }}

      - name: "Deploy plugin to pypi"
        run: |
          .github/workflows/scripts/publish_plugin_pypi.sh {{ "${{ github.ref_name }}" }}
  {%- endif %}

  {%- if plugins %}
  {%- if deploy_client_to_pypi %}
  publish-python-bindings:
    runs-on: "ubuntu-latest"
    needs:
      - "build"

    env:
      GITHUB_TOKEN: "{{ '${{ secrets.GITHUB_TOKEN }}' }}"

    steps:
      {{ checkout(depth=1, path=plugin_name) | indent(6) }}

      - name: "Download Python client"
        uses: "actions/download-artifact@v4"
        with:
          name: "python-client.tar"
          path: "{{ plugin_name }}/"

      - name: "Untar python client packages"
        run: |
          {%- for plugin in plugins %}
          tar -xvf {{ plugin.app_label }}-python-client.tar
          {%- endfor %}

      {{ setup_python() | indent(6) }}

      {{ install_python_deps(["twine"]) | indent(6) }}

      {{ set_secrets() | indent(6) }}

      - name: "Publish client to pypi"
        run: |
          bash .github/workflows/scripts/publish_client_pypi.sh {{ "${{ github.ref_name }}" }}
  {%- endif %}

  {%- if deploy_client_to_rubygems %}
  publish-ruby-bindings:
    runs-on: "ubuntu-latest"
    needs:
      - "build"

    env:
      GITHUB_TOKEN: "{{ "${{ secrets.GITHUB_TOKEN }}" }}"

    steps:
      {{ checkout(depth=1, path=plugin_name) | indent(6) }}

      - name: "Download Ruby client"
        uses: "actions/download-artifact@v4"
        with:
          name: "ruby-client.tar"
          path: "{{ plugin_name }}/"

      - name: "Untar Ruby client packages"
        run: |
          {%- for plugin in plugins %}
          tar -xvf {{ plugin.app_label }}-ruby-client.tar
          {%- endfor %}

      {{ setup_ruby() | indent(6) }}

      {{ set_secrets() | indent(6) }}

      - name: "Publish client to rubygems"
        run: |
          bash .github/workflows/scripts/publish_client_gem.sh {{ "${{ github.ref_name }}" }}
  {%- endif %}
  {%- endif %}

  create-gh-release:
    runs-on: "ubuntu-latest"
    needs:
      - "build"
      {%- if deploy_to_pypi %}
      - "publish-package"
      {%- endif %}
      {%- if plugins %}
      {%- if deploy_client_to_pypi %}
      - "publish-python-bindings"
      {%- endif %}
      {%- if deploy_client_to_rubygems %}
      - "publish-ruby-bindings"
      {%- endif %}
      {%- endif %}

    steps:
      - name: "Create release on GitHub"
        uses: "actions/github-script@v7"
        env:
          TAG_NAME: "{{ '${{ github.ref_name }}' }}"
        with:
          script: |
            const { TAG_NAME } = process.env;

            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: TAG_NAME,
              make_latest: "legacy",
            });
