{% include 'header.j2' %}
{% from 'macros.j2' import 
  set_env_vars, 
  checkout, 
  setup_python, 
  setup_ruby,
  install_httpie, 
  after_failure, 
  run_script, 
  set_secrets,
  install_python_deps, 
with context %}
---
name: {{ plugin_camel_short | default("Pulp") }} Nightly CI/CD
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        env:
          - TEST: pulp
          {%- if docs_test %}
          - TEST: docs
          {%- endif %}
          {%- if test_s3 %}
          - TEST: s3
          {%- endif %}
          {%- if (deploy_daily_client_to_pypi or deploy_daily_client_to_rubygems) and not test_bindings %}
          - TEST: generate-bindings
          {%- elif test_bindings  %}
          - TEST: bindings
          {%- endif %}
          {%- if test_released_plugin_with_next_pulpcore_release %}
          - TEST: plugin-from-pypi
          {%- endif %}

    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ install_httpie() | indent(6) }}

      {{ run_script(name="Before Install", file="before_install.sh") | indent(6) }}

      {{ setup_ruby(condition="${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}") | indent(6) }}

      {{ run_script(name="Install", file="install.sh") | indent(6) }}

      {{ run_script(name="Before Script", file="before_script.sh") | indent(6) }}

      {{ set_secrets() | indent(6) }}

      {{ run_script(name="Install Python client", file="install_python_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Install Ruby client", file="install_ruby_client.sh", withenv=False, condition="${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}") | indent(6) }}

      {{ run_script(name="Script", file="script.sh") | indent(6) }}

      - name: Upload python client packages
        if: {{ "${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}" }}
        uses: actions/upload-artifact@v2
        with:
          name: python-client.tar
          path: python-client.tar

      - name: Upload ruby client packages
        if: {{ "${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}" }}
        uses: actions/upload-artifact@v2
        with:
          name: ruby-client.tar
          path: ruby-client.tar

      - name: Upload built docs
        if: {{ "${{ env.TEST == 'docs' }}" }}
        uses: actions/upload-artifact@v2
        with:
          name: docs.tar
          path: docs/docs.tar

      {{ after_failure() | indent(6) }}

  publish:
    runs-on: ubuntu-latest
    needs: test

    env:
      TEST: publish

    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ setup_ruby() | indent(6) }}

      {{ install_httpie() | indent(6) }}

      {{ install_python_deps("wheel") | indent(6) }}

      {{ run_script(name="Before Install", file="before_install.sh") | indent(6) }}

      {{ run_script(name="Install", file="install.sh") | indent(6) }}

      {{ run_script(name="Install Python client", file="install_python_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Install Ruby client", file="install_ruby_client.sh", withenv=False, condition="${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}") | indent(6) }}

      {{ run_script(name="Before Script", file="before_script.sh") | indent(6) }}

      {{ set_secrets() | indent(6) }}

      {% if deploy_daily_client_to_rubygems %}
      - name: Download Ruby client
        uses: actions/download-artifact@v2
        with:
          name: python-client.tar

      - name: Untar Ruby client packages
        run: tar -xvf ruby-client.tar

      - name: Publish client to rubygems
        run: bash .github/workflows/scripts/publish_client_gem.sh
      {% endif %}

      {% if deploy_daily_client_to_pypi %}
      - name: Download Python client
        uses: actions/download-artifact@v2
        with:
          name: python-client.tar

      - name: Untar python client packages
        run: tar -xvf python-client.tar

      - name: Publish client to pypi
        run: bash .github/workflows/scripts/publish_client_pypi.sh
      {% endif %}

      {% if publish_docs_to_pulpprojectdotorg %}
      - name: Download built docs
        uses: actions/download-artifact@v2
        with:
          name: docs.tar

      - name: Publish docs to pulpproject.org
        run: |
          tar -xvf docs.tar -C ./docs
          .github/workflows/scripts/publish_docs.sh nightly ${GITHUB_REF##*/}
      {% endif %}

      {{ after_failure() | indent(6) }}

{%- if test_performance %}

  performance:
    runs-on: ubuntu-latest
    needs: test

    {%- if test_performance is iterable and test_performance|length > 1 %}
    strategy:
      fail-fast: false
      matrix:
        env:
        {%- for test in test_performance %}
          - PERFORMANCE_TEST: {{test}}
        {%- endfor %}
    {%- endif %}

    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ install_httpie() | indent(6) }}

      {{ install_python_deps("wheel") | indent(6) }}

      {{ run_script(name="Before Install", file="before_install.sh") | indent(6) }}

      {{ run_script(name="Install", file="install.sh") | indent(6) }}

      {{ run_script(name="Install Python client", file="install_python_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Before Script", file="before_script.sh") | indent(6) }}

      {{ set_secrets() | indent(6) }}

      {{ run_script(name="Performance Test", file="script.sh") | indent(6) }}

      {{ after_failure() | indent(6) }}
{%- endif %}
