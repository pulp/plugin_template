{% include 'header.j2' %}
{% from 'macros.j2' import
  set_env_vars,
  checkout,
  setup_python,
  setup_ruby,
  install_httpie,
  setup_env,
  display_logs,
  run_script,
  set_secrets,
  install_python_deps,
  configure_git,
with context %}
---
name: {{ plugin_camel_short | default("Pulp") }} Nightly CI/CD
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        env:
          - TEST: pulp
          {%- if docs_test %}
          - TEST: docs
          {%- endif %}
          {%- if test_azure %}
          - TEST: azure
          {%- endif %}
          {%- if test_gcp %}
          - TEST: gcp
          {%- endif %}
          {%- if test_s3 %}
          - TEST: s3
          {%- endif %}
          {%- if test_stream %}
          - TEST: stream
          {%- endif %}
          {% if publish_docs_to_pulpprojectdotorg and docs_test %}
          - TEST: generate-bindings
          {%- endif %}
          {%- if test_released_plugin_with_next_pulpcore_release %}
          - TEST: plugin-from-pypi
          {%- endif %}
          {%- if test_lowerbounds %}
          - TEST: lowerbounds
          {%- endif %}

    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ install_httpie() | indent(6) }}

      {{ setup_env() | indent(6) }}

      {{ run_script(name="Before Install", file="before_install.sh") | indent(6) }}

      {{ setup_ruby(condition="${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}") | indent(6) }}

      {{ run_script(name="Install", file="install.sh") | indent(6) }}

      {{ run_script(name="Before Script", file="before_script.sh", extra_env={"REDIS_DISABLED": "${{ contains('%s', matrix.env.TEST) }}" % (disabled_redis_runners | default(["TILT"]) | join(' '))}) | indent(6) }}

      {{ set_secrets() | indent(6) }}

      {{ run_script(name="Install Python client", file="install_python_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Install Ruby client", file="install_ruby_client.sh", withenv=False, condition="${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}") | indent(6) }}

      {{ run_script(name="Script", file="script.sh") | indent(6) }}

      - name: Upload python client packages
        if: {{ "${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}" }}
        uses: actions/upload-artifact@v3
        with:
          name: python-client.tar
          path: python-client.tar

      - name: Upload python client docs
        if: {{ "${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}" }}
        uses: actions/upload-artifact@v3
        with:
          name: python-client-docs.tar
          path: python-client-docs.tar

      - name: Upload ruby client packages
        if: {{ "${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}" }}
        uses: actions/upload-artifact@v3
        with:
          name: ruby-client.tar
          path: ruby-client.tar

      {%- if docs_test %}
      - name: Upload built docs
        if: {{ "${{ env.TEST == 'docs' }}" }}
        uses: actions/upload-artifact@v3
        with:
          name: docs.tar
          path: docs/docs.tar
      {%- endif %}

      {{ display_logs() | indent(6) }}

  changelog:
    runs-on: ubuntu-latest
    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ install_python_deps("gitpython requests packaging") | indent(6) }}

      {{ configure_git() | indent(6) }}

      - name: Changelog history
        run: python .ci/scripts/changelog.py

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: {{ '${{ secrets.RELEASE_TOKEN }}' }}
          committer: {{release_user}} <{{ release_email }}>
          author: {{release_user}} <{{ release_email }}>
          title: 'Update Changelog'
          body: '{{ noissue_marker | default("[noissue]") }}'
          branch: 'changelog/update'
          base: {{ plugin_default_branch }}
          commit-message: |
            Update Changelog

            {{ noissue_marker | default("[noissue]") }}
          delete-branch: true

  publish:
    runs-on: ubuntu-latest
    needs: test

    env:
      TEST: publish

    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ setup_ruby() | indent(6) }}

      {{ install_httpie() | indent(6) }}

      {{ setup_env() | indent(6) }}

      {{ install_python_deps("wheel") | indent(6) }}

      {{ run_script(name="Before Install", file="before_install.sh") | indent(6) }}

      {{ run_script(name="Install", file="install.sh") | indent(6) }}

      {{ run_script(name="Install Python client", file="install_python_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Install Ruby client", file="install_ruby_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Before Script", file="before_script.sh", extra_env={"REDIS_DISABLED": "${{ contains('%s', matrix.env.TEST) }}" % (disabled_redis_runners | default(["TILT"]) | join(' '))}) | indent(6) }}

      {{ set_secrets() | indent(6) }}

      {% if publish_docs_to_pulpprojectdotorg and docs_test %}
      - name: Download built docs
        uses: actions/download-artifact@v3
        with:
          name: docs.tar

      - name: Download Python client docs
        uses: actions/download-artifact@v3
        with:
          name: python-client-docs.tar

      - name: Publish docs to pulpproject.org
        run: |
          tar -xvf docs.tar -C ./docs
          .github/workflows/scripts/publish_docs.sh nightly ${GITHUB_REF##*/}
      {% endif %}

      {{ display_logs() | indent(6) }}

{%- if test_performance %}

  performance:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      fail-fast: false
      matrix:
        env:
        {%- if test_performance is iterable and test_performance|length > 1 %}
          {%- for test in test_performance %}
          - TEST: performance
            PERFORMANCE_TEST: {{test}}
          {%- endfor %}
        {%- else %}
          - TEST: performance
        {%- endif %}

    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ install_httpie() | indent(6) }}

      {{ setup_env(test="performance") | indent(6) }}

      {{ install_python_deps("wheel") | indent(6) }}

      {{ run_script(name="Before Install", file="before_install.sh") | indent(6) }}

      {{ run_script(name="Install", file="install.sh") | indent(6) }}

      {{ run_script(name="Install Python client", file="install_python_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Before Script", file="before_script.sh", extra_env={"REDIS_DISABLED": "${{ contains('%s', matrix.env.TEST) }}" % (disabled_redis_runners | default(["TILT"]) | join(' '))}) | indent(6) }}

      {{ set_secrets() | indent(6) }}

      {{ run_script(name="Performance Test", file="script.sh") | indent(6) }}

      {{ display_logs() | indent(6) }}
{%- endif %}
