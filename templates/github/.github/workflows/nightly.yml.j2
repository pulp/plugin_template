{% include 'header.j2' %}
{% from 'macros.j2' import
  checkout,
  setup_python,
  setup_ruby,
  setup_env,
  display_logs,
  run_script,
  set_secrets,
  install_python_deps,
  configure_git,
with context %}
---
name: "{{ plugin_app_label | camel }} Nightly CI"
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'
  workflow_dispatch:

defaults:
  run:
    working-directory: "{{ plugin_name }}"

concurrency:
  group: "{{ '${{ github.ref_name }}-${{ github.workflow }}' }}"
  cancel-in-progress: true

jobs:
  build:
    uses: "./.github/workflows/build.yml"

  test:
    needs: "build"
    uses: "./.github/workflows/test.yml"

  changelog:
    runs-on: ubuntu-latest
    steps:
      {{ checkout(depth=0, path=plugin_name) | indent(6) }}

      {{ setup_python(pyversion="3.11") | indent(6) }}

      {{ install_python_deps(["gitpython", "packaging", "toml"]) | indent(6) }}

      {{ configure_git() | indent(6) }}

      - name: Collect changes from all branches
        run: python .ci/scripts/collect_changes.py

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: {{ '${{ secrets.RELEASE_TOKEN }}' }}
          title: "Update Changelog"
          body: ""
          branch: "changelog/update"
          delete-branch: true
          path: "{{ plugin_name }}"

  publish:
    runs-on: ubuntu-latest
    needs: test

    steps:
      {{ checkout(path=plugin_name) | indent(6) }}

      - uses: actions/download-artifact@v4
        with:
          name: "plugin_package"
          path: "{{ plugin_name }}/dist/"

      {{ setup_python() | indent(6) }}

      {{ install_python_deps(["requests", "packaging~=21.3", "mkdocs", "pymdown-extensions", "Jinja2<3.1"]) | indent(6) }}

      {{ setup_env() | indent(6) }}
      {%- if publish_docs_to_pulpprojectdotorg and docs_test %}

      - name: Download built docs
        uses: actions/download-artifact@v4
        with:
          name: "docs.tar"
          path: "{{ plugin_name }}"

      - name: Download Python client docs
        uses: actions/download-artifact@v4
        with:
          name: "python-client-docs.tar"
          path: "{{ plugin_name }}"

      {{ set_secrets() | indent(6) }}

      - name: Publish docs to pulpproject.org
        run: |
          tar -xvf docs.tar -C ./docs
          .github/workflows/scripts/publish_docs.sh nightly ${GITHUB_REF##*/}
      {%- endif %}
{%- if test_performance %}

  performance:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      fail-fast: false
      matrix:
        env:
        {%- if test_performance is iterable and test_performance|length > 1 %}
          {%- for test in test_performance %}
          - TEST: performance
            PERFORMANCE_TEST: {{test}}
          {%- endfor %}
        {%- else %}
          - TEST: performance
        {%- endif %}

    steps:
      {{ checkout(path=plugin_name) | indent(6) }}

      {{ checkout(repository="pulp/pulp-openapi-generator", path="pulp-openapi-generator") | indent(6) }}

      - uses: actions/download-artifact@v4
        with:
          name: "plugin_package"
          path: "{{ plugin_name }}/dist/"

      {{ setup_python() | indent(6) }}

      {{ setup_env(test="performance") | indent(6) }}

      {{ install_python_deps(["towncrier", "twine", "wheel", "httpie", "docker", "netaddr", "boto3", "ansible", "mkdocs"]) | indent(6) }}

      {{ run_script(name="Before Install", file="before_install.sh") | indent(6) }}

      {{ run_script(name="Install", file="install.sh") | indent(6) }}

      {{ run_script(name="Install Python client", file="install_python_client.sh", withenv=False) | indent(6) }}

      {{ run_script(name="Before Script", file="before_script.sh", extra_env={"REDIS_DISABLED": "${{ contains('%s', matrix.env.TEST) }}" % (disabled_redis_runners | default(["TILT"]) | join(' '))}) | indent(6) }}

      {{ run_script(name="Performance Test", file="script.sh") | indent(6) }}

      {{ display_logs() | indent(6) }}
{%- endif %}
