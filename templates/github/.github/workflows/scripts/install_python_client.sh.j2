#!/bin/bash

{% include 'header.j2' %}

set -mveuo pipefail

export PULP_URL="${PULP_URL:-{{ pulp_scheme }}://pulp}"

# make sure this script runs at the repo root
cd "$(dirname "$(realpath -e "$0")")"/../../..

source .github/workflows/scripts/utils.sh

pip install twine wheel

REPORTED_STATUS="$(pulp status)"
REPORTED_VERSION="$(echo "$REPORTED_STATUS" | jq --arg plugin "{{ plugin_app_label }}" -r '.versions[] | select(.component == $plugin) | .version')"
VERSION="$(echo "$REPORTED_VERSION" | python -c 'from packaging.version import Version; print(Version(input()))')"

RESPONSE="$(curl --write-out '%{http_code}' --silent --output /dev/null "https://pypi.org/project/{{ plugin_name | dash }}-client/$VERSION/")"

if [ "$RESPONSE" == "200" ];
then
  # TODO This is probably not needed.
  echo "{{ plugin_name }} client $VERSION has already been released. Installing from PyPI."
  cms_prefix pip3 install "{{ plugin_name | dash }}-client==$VERSION"
  mkdir -p dist
  tar cvf python-client.tar ./dist
  exit
fi

cd ../pulp-openapi-generator
rm -rf {{ plugin_name | snake }}-client
./generate.sh {{ plugin_name | snake }} python "$VERSION"
cd {{ plugin_name | snake }}-client
python setup.py sdist bdist_wheel --python-tag py3
cmd_prefix pip3 install "/root/pulp-openapi-generator/{{ plugin_name | snake }}-client/dist/{{ plugin_name | snake }}_client-${VERSION}-py3-none-any.whl"
tar cvf ../../{{ plugin_name }}/python-client.tar ./dist

find ./docs/* -exec sed -i 's/Back to README/Back to HOME/g' {} \;
find ./docs/* -exec sed -i 's/README//g' {} \;
cp README.md docs/index.md
sed -i 's/docs\///g' docs/index.md
find ./docs/* -exec sed -i 's/\.md//g' {} \;
tar cvf ../../{{ plugin_name }}/python-client-docs.tar ./docs
exit $?
