#!/bin/bash

{% include 'header.j2' %}

set -euv

export PULP_URL="${PULP_URL:-http://pulp}"

# make sure this script runs at the repo root
cd "$(dirname "$(realpath -e "$0")")"/../../..

pip install twine wheel

export REPORTED_VERSION=$(http pulp/pulp/api/v3/status/ | jq --arg plugin {{ plugin_app_label }} --arg legacy_plugin {{ plugin_snake }} -r '.versions[] | select(.component == $plugin or .component == $legacy_plugin) | .version')
export DESCRIPTION="$(git describe --all --exact-match `git rev-parse HEAD`)"
if [[ $DESCRIPTION == 'tags/'$REPORTED_VERSION ]]; then
  export VERSION=${REPORTED_VERSION}
else
  export EPOCH="$(date +%s)"
  export VERSION=${REPORTED_VERSION}${EPOCH}
fi

export response=$(curl --write-out %{http_code} --silent --output /dev/null https://pypi.org/project/{{ plugin_dash }}-client/$VERSION/)

if [ "$response" == "200" ];
then
  echo "{{ plugin_name }} client $VERSION has already been released. Installing from PyPI."
  pip install {{ plugin_dash }}-client==$VERSION
  mkdir -p dist
  tar cvf python-client.tar ./dist
  exit
fi

cd ../pulp-openapi-generator

./generate.sh {{ plugin_snake }} python $VERSION
cd {{ plugin_snake }}-client
python setup.py sdist bdist_wheel --python-tag py3
pip install dist/{{ plugin_snake }}_client-$VERSION-py3-none-any.whl
tar cvf ../../{{ plugin_name }}/python-client.tar ./dist
exit $?
