#!/bin/bash

{% include 'header.j2' %}

set -mveuo pipefail

export PULP_URL="${PULP_URL:-{{ pulp_scheme }}://pulp}"

# make sure this script runs at the repo root
cd "$(dirname "$(realpath -e "$0")")"/../../..

pip install twine wheel

export REPORTED_VERSION=$(http $PULP_URL/pulp/api/v3/status/ | jq --arg plugin {{ plugin_app_label }} --arg legacy_plugin {{ plugin_snake }} -r '.versions[] | select(.component == $plugin or .component == $legacy_plugin) | .version')
export DESCRIPTION="$(git describe --all --exact-match `git rev-parse HEAD`)"
if [[ $DESCRIPTION == 'tags/'$REPORTED_VERSION ]]; then
  export VERSION=${REPORTED_VERSION}
else
  export EPOCH="$(date +%s)"
  export VERSION=${REPORTED_VERSION}${EPOCH}
fi

export response=$(curl --write-out %{http_code} --silent --output /dev/null https://pypi.org/project/{{ plugin_dash }}-client/$VERSION/)

if [ "$response" == "200" ];
then
  echo "{{ plugin_name }} client $VERSION has already been released. Installing from PyPI."
  docker exec pulp pip3 install {{ plugin_dash }}-client==$VERSION
  mkdir -p dist
  tar cvf python-client.tar ./dist
  exit
fi

cd ../pulp-openapi-generator
rm -rf {{ plugin_snake }}-client
./generate.sh {{ plugin_snake }} python $VERSION
cd {{ plugin_snake }}-client
python setup.py sdist bdist_wheel --python-tag py3
find . -name "*.whl" -exec docker exec pulp pip3 install /root/pulp-openapi-generator/{{ plugin_snake }}-client/{} \;
tar cvf ../../{{ plugin_name }}/python-client.tar ./dist

find ./docs/* -exec sed -i 's/Back to README/Back to HOME/g' {} \;
find ./docs/* -exec sed -i 's/README//g' {} \;
cp README.md docs/index.md
sed -i 's/docs\///g' docs/index.md
find ./docs/* -exec sed -i 's/\.md//g' {} \;
tar cvf ../../{{ plugin_name }}/python-client-docs.tar ./docs
exit $?
