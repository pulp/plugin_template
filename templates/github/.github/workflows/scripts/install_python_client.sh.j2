#!/bin/bash

{% include 'header.j2' %}

set -mveuo pipefail

# make sure this script runs at the repo root
cd "$(dirname "$(realpath -e "$0")")"/../../..

source .github/workflows/scripts/utils.sh

export PULP_URL="${PULP_URL:-{{ pulp_scheme }}://pulp}"

REPORTED_STATUS="$(pulp status)"
REPORTED_VERSION="$(echo "$REPORTED_STATUS" | jq --arg plugin "{{ plugin_app_label }}" -r '.versions[] | select(.component == $plugin) | .version')"
VERSION="$(echo "$REPORTED_VERSION" | python -c 'from packaging.version import Version; print(Version(input()))')"

pushd ../pulp-openapi-generator
{%- for plugin in plugins %}
rm -rf {{ plugin.name | snake }}-client
./generate.sh {{ plugin.name | snake }} python "$VERSION"
pushd {{ plugin.name | snake }}-client
python setup.py sdist bdist_wheel --python-tag py3

twine check "dist/{{ plugin.name | snake }}_client-$VERSION-py3-none-any.whl" || exit 1
twine check "dist/{{ plugin.name | snake }}-client-$VERSION.tar.gz" || exit 1

cmd_prefix pip3 install "/root/pulp-openapi-generator/{{ plugin.name | snake }}-client/dist/{{ plugin.name | snake }}_client-${VERSION}-py3-none-any.whl"
tar cvf ../../{{ plugin_name }}/{{ plugin.app_label }}-python-client.tar ./dist

find ./docs/* -exec sed -i 's/Back to README/Back to HOME/g' {} \;
find ./docs/* -exec sed -i 's/README//g' {} \;
cp README.md docs/index.md
sed -i 's/docs\///g' docs/index.md
find ./docs/* -exec sed -i 's/\.md//g' {} \;
tar cvf ../../{{ plugin_name }}/{{ plugin.app_label }}-python-client-docs.tar ./docs
popd
{%- endfor %}
popd
