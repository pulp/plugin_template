#!/bin/bash

{% include 'header.j2' %}

set -mveuo pipefail

# make sure this script runs at the repo root
cd "$(dirname "$(realpath -e "$0")")"/../../..

source .github/workflows/scripts/utils.sh

PULP_URL="${PULP_URL:-{{ pulp_scheme }}://pulp}"
export PULP_URL
PULP_API_ROOT="${PULP_API_ROOT:-/pulp/}"
export PULP_API_ROOT

REPORTED_STATUS="$(pulp status)"
REPORTED_VERSION="$(echo "$REPORTED_STATUS" | jq --arg plugin "{{ plugin_app_label }}" -r '.versions[] | select(.component == $plugin) | .version')"
VERSION="$(echo "$REPORTED_VERSION" | python -c 'from packaging.version import Version; print(Version(input()))')"

pushd ../pulp-openapi-generator
{%- for plugin in plugins %}
rm -rf {{ plugin.name | snake }}-client

if pulp debug has-plugin --name "core" --specifier ">=3.44.0.dev"
then
  curl --fail-with-body -k -o api.json "${PULP_URL}${PULP_API_ROOT}api/v3/docs/api.json?bindings&component={{ plugin.app_label }}"
  USE_LOCAL_API_JSON=1 ./generate.sh {{ plugin.name | snake }} ruby "$VERSION"
else
  ./generate.sh {{ plugin.name | snake }} ruby "$VERSION"
fi

pushd {{ plugin.name | snake }}-client
gem build {{ plugin.name | snake }}_client
gem install --both "./{{ plugin.name | snake }}_client-$VERSION.gem"
tar cvf ../../{{ plugin_name }}/{{ plugin.app_label }}-ruby-client.tar "./{{ plugin.name | snake }}_client-$VERSION.gem"
popd
{%- endfor %}
popd
