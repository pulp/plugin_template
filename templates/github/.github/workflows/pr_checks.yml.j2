{% include 'header.j2' %}
{% from 'macros.j2' import
  checkout,
  setup_python,
with context %}
---
name: "{{ plugin_app_label | camel }} PR static checks"
on:
  pull_request_target:
    types: ["opened", "synchronize", "reopened"]

# This workflow runs with elevated permissions.
# Do not even think about running a single bit of code from the PR.
# Static analysis should be fine however.

concurrency:
  group: "{{ '${{ github.event.pull_request.number }}-${{ github.workflow }}' }}"
  cancel-in-progress: true

jobs:
  apply_labels:
    runs-on: "ubuntu-latest"
    name: "Label PR"
    permissions:
      pull-requests: "write"
    steps:
      {{ checkout(depth=0) | indent(6) }}
      {{ setup_python() | indent(6) }}
      - name: "Determine PR labels"
        run: |
          {%- raw %}
          pip install GitPython==3.1.42
          git fetch origin ${{ github.event.pull_request.head.sha }}
          python .ci/scripts/pr_labels.py "origin/${{ github.base_ref }}" "${{ github.event.pull_request.head.sha }}" >> "$GITHUB_ENV"
          {%- endraw %}
      - uses: "actions/github-script@v7"
        name: "Apply PR Labels"
        with:
          script: |
            const { ADD_LABELS, REMOVE_LABELS } = process.env;

            if (REMOVE_LABELS.length) {
              for await (const labelName of REMOVE_LABELS.split(",")) {
                try {
                  await github.rest.issues.removeLabel({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: labelName,
                  });
                } catch(err) {
                }
              }
            }
            if (ADD_LABELS.length) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ADD_LABELS.split(","),
              });
            }
...
