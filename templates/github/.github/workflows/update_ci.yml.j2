{% include 'header.j2' %}
{% from 'macros.j2' import
  checkout,
  setup_python,
  install_python_deps,
  configure_git,
with context %}

---
name: CI Update
on:
  {%- if sync_ci %}
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 2:30 UTC every Sunday
    - cron: '30 2 * * 0'
  {% endif %}
  workflow_dispatch:
    inputs:
      all_branches:
        description: "Run on all branches"
        default: 'no'
        required: false

jobs:
  update:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      {{ checkout() | indent(6) }}

      {{ setup_python() | indent(6) }}

      {{ install_python_deps("gitpython requests packaging jinja2 pyyaml") | indent(6) }}

      {{ configure_git() | indent(6) }}

      - name: Set short_ref
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      {%- if ci_update_branches %}
      - name: Dispatching
        if: github.event_name == 'schedule' || github.event.inputs.all_branches == 'yes'
        run: python .ci/scripts/update_ci_branches.py {{ ci_update_branches | join(" ") }}
        env:
          GITHUB_TOKEN: {{ "${{ secrets.RELEASE_TOKEN }}" }}
      {%- endif %}

      - name: Run update
        run: |
          .github/workflows/scripts/update_ci.sh

      - name: Create Pull Request for CI files
        uses: peter-evans/create-pull-request@v4
        with:
          token: {{ '${{ secrets.RELEASE_TOKEN }}' }}
          committer: {{release_user}} <{{ release_email }}>
          author: {{release_user}} <{{ release_email }}>
          title: 'Update CI files from {{ "${{ steps.vars.outputs.short_ref }}" }} branch'
          body: '{{ noissue_marker | default("[noissue]") }}'
          branch: 'create-pull-request/{{ "${{ steps.vars.outputs.short_ref }}" }}/patch'
          commit-message: |
            Update CI files

            {{ noissue_marker | default("[noissue]") }}
          delete-branch: true
