{%- macro set_env_vars(extra_env=None) -%}
PY_COLORS: '1'
ANSIBLE_FORCE_COLOR: '1'
GITHUB_PULL_REQUEST: {{ "${{ github.event.number }}" }}
GITHUB_PULL_REQUEST_BODY: {{ "${{ github.event.pull_request.body }}" }}
GITHUB_BRANCH: {{ "${{ github.head_ref }}" }}
GITHUB_REPO_SLUG: {{ "${{ github.repository }}" }}
GITHUB_TOKEN: {{ "${{ secrets.GITHUB_TOKEN }}" }}
GITHUB_CONTEXT: {{ "${{ github.event.pull_request.commits_url }}" }}
{%- for key, value in ci_env.items() %}
{{ key }}: {{ value }}
{%- endfor %}
{%- if extra_env is not none %}
{%- for key, value in extra_env.items() %}
{{ key }}: {{ value }}
{%- endfor %}
{%- endif %}
{%- endmacro -%}


{%- macro checkout(depth=1, path=None) -%}
- uses: actions/checkout@v3
  with:
    fetch-depth: {{ depth }}
    {%- if path %}
    path: {{ path }}
    {%- endif %}
{%- endmacro -%}


{%- macro setup_python(pyversion=python_version) -%}
- uses: actions/setup-python@v3
  with:
    python-version: "{{ pyversion }}"
{%- endmacro -%}


{%- macro setup_ruby(condition=None) -%}
- uses: ruby/setup-ruby@v1
  {%- if condition %}
  if: {{ condition }}
  {%- endif %}
  with:
    ruby-version: "2.6"
{%- endmacro -%}


{%- macro install_httpie() -%}
- name: Install httpie
  run: |
    echo ::group::HTTPIE
    pip install httpie
    echo ::endgroup::
    echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
{%- endmacro -%}


{%- macro setup_env(test=None) -%}
- name: Set environment variables
  run: |
    echo "TEST={{ "${{ matrix.env.TEST }}" }}" >> $GITHUB_ENV

    {%- if test_performance and test == "performance" %}
    {%- if test_performance is iterable and test_performance|length > 1 %}
    echo "PERFORMANCE_TEST={{ "${{ matrix.env.PERFORMANCE_TEST }}" }}" >> $GITHUB_ENV
    {%- endif %}
    {%- endif %}
{%- endmacro -%}


{%- macro display_logs() -%}
- name: Logs
  if: always()
  run: |
    echo "Need to debug? Please check: https://github.com/marketplace/actions/debugging-with-tmate"
    http --timeout 30 --check-status --pretty format --print hb "{{ pulp_scheme }}://pulp${PULP_API_ROOT}api/v3/status/" || true
    docker images || true
    docker ps -a || true
    docker logs pulp || true
    docker exec pulp ls -latr /etc/yum.repos.d/ || true
    docker exec pulp cat /etc/yum.repos.d/* || true
    docker exec pulp bash -c "pip3 list && pip3 install pipdeptree && pipdeptree"
{%- endmacro -%}


{%- macro run_script(name, file, withenv=True, condition=None, extra_env=None, path=None) -%}
- name: {{ name }}
  {%- if path %}
  working-directory: {{ path }}
  {%- endif %}
  {%- if condition %}
  if: {{ condition }}
  {%- endif %}
  run: .github/workflows/scripts/{{ file }}
  shell: bash
  {%- if withenv %}
  env:
    {{ set_env_vars(extra_env) | indent(4) }}
  {%- endif %}
{%- endmacro -%}


{%- macro set_secrets(condition=None, path=None) -%}
- name: Setting secrets
  {%- if path %}
  working-directory: {{ path }}
  {%- endif %}
  {%- if condition %}
  if: {{ condition }}
  {%- endif %}
  run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
  env:
    SECRETS_CONTEXT: {{ "${{ toJson(secrets) }}" }}
{%- endmacro -%}


{%- macro install_python_deps(deps="") -%}
- name: Install python dependencies
  run: |
    echo ::group::PYDEPS
    pip install {{ deps }}
    echo ::endgroup::
{%- endmacro -%}

{%- macro configure_git() -%}
- name: Configure Git with {{ release_user }} name and email
  run: |
    git config --global user.name '{{ release_user }}'
    git config --global user.email '{{ release_email }}'
{%- endmacro -%}
